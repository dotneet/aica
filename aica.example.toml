[llm]
# provider = 'openai' | 'anthropic'
provider = 'openai'

[llm.openai]
model = 'gpt-4-turbo-2024-04-09'

[llm.anthropic]
model = 'claude-3-opus-20240229'


[source]
includePatterns = [
    "**/*.{js,ts,jsx,tsx,java,dart,kt,scala,go,rs,zig,rb,php,py}",
]

excludePatterns = [
    "node_modules/**",
    "vendor/**",
    "tmp/**",
    "dist/**",
    "out/**",
    "test/**",
    "tests/**",
    "spec/**",
    "specs/**",
    "doc/**",
    "docs/**",
    "**/*.test.ts",
]

[knowledge.fixture]
# these files are embedded in an user prompt as a knowledge always.
files = ["testdata/docs/spec.txt"]

[knowledge.codeSearch]
# code search provides symbol based search for the given directory.
directory = "testdata/src"
persistentFilePath = "knowledge-src.db"
includePatterns = [
    "**/*.{ts,js,jsx,tsx,java,dart,kt,scala,go,rs,zig,rb,php,py}",
]
excludePatterns = [
    "node_modules/**",
    "vendor/**",
    "tmp/**",
    "dist/**",
    "out/**",
]

[knowledge.documentSearch]
# document search provides vector based search for the given directory.
directory = "testdata/docs"
persistentFilePath = "knowledge-doc.db"
includePatterns = ["**/*.{md,txt,adoc,html}"]
excludePatterns = [
    "node_modules/**",
    "vendor/**",
    "tmp/**",
    "dist/**",
    "out/**",
]


[review.prompt]
system = "You are a QA engineer reviewing code for bugs."
rules = [
    "Provide list of critical or high risk bugs and security issues.",
    "Use JSON format to return the issues.",
    "Only provide when you are convinced that it is a bug absolutely.",
    "No need to output low risk bugs and error handling problems.",
    "Provide up to 5 issues.",
]

user = "Identify and list any critical bugs in the code below, with brief explanations for each."

[summary.prompt]
system = "You are a senior software engineer."
rules = [
    "Provide list of the brief summary of the changes in the given code.",
    "Given code maybe a diff or a code snippet.",
    "Use JSON format to return the explanation of changes.",
]

user = """\
Summarize the given code changes.\n\
\n\
=== CODE ===\n\
%CODE%\n\
============\n\
"""
